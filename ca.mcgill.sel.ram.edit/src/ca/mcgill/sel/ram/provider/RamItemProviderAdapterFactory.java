/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package ca.mcgill.sel.ram.provider;

import ca.mcgill.sel.ram.util.RamAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.Disposable;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to
 * {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class RamItemProviderAdapterFactory extends RamAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    /**
     * This keeps track of the root adapter factory that delegates to this adapter factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ComposedAdapterFactory parentAdapterFactory;

    /**
     * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected IChangeNotifier changeNotifier = new ChangeNotifier();

    /**
     * This keeps track of all the item providers created, so that they can be {@link #dispose disposed}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected Disposable disposable = new Disposable();

    /**
     * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected Collection<Object> supportedTypes = new ArrayList<Object>();

    /**
     * This constructs an instance.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public RamItemProviderAdapterFactory() {
        supportedTypes.add(IEditingDomainItemProvider.class);
        supportedTypes.add(IStructuredItemContentProvider.class);
        supportedTypes.add(ITreeItemContentProvider.class);
        supportedTypes.add(IItemLabelProvider.class);
        supportedTypes.add(IItemPropertySource.class);
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.Aspect} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AspectItemProvider aspectItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.Aspect}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAspectAdapter() {
        if (aspectItemProvider == null) {
            aspectItemProvider = new AspectItemProvider(this);
        }

        return aspectItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.StructuralView} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected StructuralViewItemProvider structuralViewItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.StructuralView}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createStructuralViewAdapter() {
        if (structuralViewItemProvider == null) {
            structuralViewItemProvider = new StructuralViewItemProvider(this);
        }

        return structuralViewItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.Class} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ClassItemProvider classItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.Class}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createClassAdapter() {
        if (classItemProvider == null) {
            classItemProvider = new ClassItemProvider(this);
        }

        return classItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.AssociationEnd} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AssociationEndItemProvider associationEndItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.AssociationEnd}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAssociationEndAdapter() {
        if (associationEndItemProvider == null) {
            associationEndItemProvider = new AssociationEndItemProvider(this);
        }

        return associationEndItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.Association} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AssociationItemProvider associationItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.Association}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAssociationAdapter() {
        if (associationItemProvider == null) {
            associationItemProvider = new AssociationItemProvider(this);
        }

        return associationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.Instantiation} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected InstantiationItemProvider instantiationItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.Instantiation}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createInstantiationAdapter() {
        if (instantiationItemProvider == null) {
            instantiationItemProvider = new InstantiationItemProvider(this);
        }

        return instantiationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.Operation} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OperationItemProvider operationItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.Operation}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOperationAdapter() {
        if (operationItemProvider == null) {
            operationItemProvider = new OperationItemProvider(this);
        }

        return operationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.Attribute} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AttributeItemProvider attributeItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.Attribute}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAttributeAdapter() {
        if (attributeItemProvider == null) {
            attributeItemProvider = new AttributeItemProvider(this);
        }

        return attributeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.Parameter} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ParameterItemProvider parameterItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.Parameter}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createParameterAdapter() {
        if (parameterItemProvider == null) {
            parameterItemProvider = new ParameterItemProvider(this);
        }

        return parameterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.RVoid} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RVoidItemProvider rVoidItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.RVoid}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRVoidAdapter() {
        if (rVoidItemProvider == null) {
            rVoidItemProvider = new RVoidItemProvider(this);
        }

        return rVoidItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.RBoolean} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RBooleanItemProvider rBooleanItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.RBoolean}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRBooleanAdapter() {
        if (rBooleanItemProvider == null) {
            rBooleanItemProvider = new RBooleanItemProvider(this);
        }

        return rBooleanItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.RInt} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RIntItemProvider rIntItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.RInt}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRIntAdapter() {
        if (rIntItemProvider == null) {
            rIntItemProvider = new RIntItemProvider(this);
        }

        return rIntItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.RChar} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RCharItemProvider rCharItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.RChar}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRCharAdapter() {
        if (rCharItemProvider == null) {
            rCharItemProvider = new RCharItemProvider(this);
        }

        return rCharItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.RString} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RStringItemProvider rStringItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.RString}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRStringAdapter() {
        if (rStringItemProvider == null) {
            rStringItemProvider = new RStringItemProvider(this);
        }

        return rStringItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.RAny} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RAnyItemProvider rAnyItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.RAny}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRAnyAdapter() {
        if (rAnyItemProvider == null) {
            rAnyItemProvider = new RAnyItemProvider(this);
        }

        return rAnyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.REnum} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected REnumItemProvider rEnumItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.REnum}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createREnumAdapter() {
        if (rEnumItemProvider == null) {
            rEnumItemProvider = new REnumItemProvider(this);
        }

        return rEnumItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.REnumLiteral} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected REnumLiteralItemProvider rEnumLiteralItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.REnumLiteral}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createREnumLiteralAdapter() {
        if (rEnumLiteralItemProvider == null) {
            rEnumLiteralItemProvider = new REnumLiteralItemProvider(this);
        }

        return rEnumLiteralItemProvider;
    }

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.MessageView}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createMessageViewAdapter() {
        return new MessageViewItemProvider(this);
    }

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.MessageViewReference}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createMessageViewReferenceAdapter() {
        return new MessageViewReferenceItemProvider(this);
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.Interaction} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected InteractionItemProvider interactionItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.Interaction}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createInteractionAdapter() {
        if (interactionItemProvider == null) {
            interactionItemProvider = new InteractionItemProvider(this);
        }

        return interactionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.AspectMessageView} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AspectMessageViewItemProvider aspectMessageViewItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.AspectMessageView}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAspectMessageViewAdapter() {
        if (aspectMessageViewItemProvider == null) {
            aspectMessageViewItemProvider = new AspectMessageViewItemProvider(this);
        }

        return aspectMessageViewItemProvider;
    }

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.Lifeline}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLifelineAdapter() {
        return new LifelineItemProvider(this);
    }

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.Message}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createMessageAdapter() {
        return new MessageItemProvider(this);
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.MessageOccurrenceSpecification} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected MessageOccurrenceSpecificationItemProvider messageOccurrenceSpecificationItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.MessageOccurrenceSpecification}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createMessageOccurrenceSpecificationAdapter() {
        if (messageOccurrenceSpecificationItemProvider == null) {
            messageOccurrenceSpecificationItemProvider = new MessageOccurrenceSpecificationItemProvider(this);
        }

        return messageOccurrenceSpecificationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.OccurrenceSpecification} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OccurrenceSpecificationItemProvider occurrenceSpecificationItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.OccurrenceSpecification}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOccurrenceSpecificationAdapter() {
        if (occurrenceSpecificationItemProvider == null) {
            occurrenceSpecificationItemProvider = new OccurrenceSpecificationItemProvider(this);
        }

        return occurrenceSpecificationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.DestructionOccurrenceSpecification} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DestructionOccurrenceSpecificationItemProvider destructionOccurrenceSpecificationItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.DestructionOccurrenceSpecification}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDestructionOccurrenceSpecificationAdapter() {
        if (destructionOccurrenceSpecificationItemProvider == null) {
            destructionOccurrenceSpecificationItemProvider = new DestructionOccurrenceSpecificationItemProvider(this);
        }

        return destructionOccurrenceSpecificationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.CombinedFragment} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CombinedFragmentItemProvider combinedFragmentItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.CombinedFragment}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCombinedFragmentAdapter() {
        if (combinedFragmentItemProvider == null) {
            combinedFragmentItemProvider = new CombinedFragmentItemProvider(this);
        }

        return combinedFragmentItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.OriginalBehaviorExecution} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OriginalBehaviorExecutionItemProvider originalBehaviorExecutionItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.OriginalBehaviorExecution}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOriginalBehaviorExecutionAdapter() {
        if (originalBehaviorExecutionItemProvider == null) {
            originalBehaviorExecutionItemProvider = new OriginalBehaviorExecutionItemProvider(this);
        }

        return originalBehaviorExecutionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.ExecutionStatement} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ExecutionStatementItemProvider executionStatementItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.ExecutionStatement}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createExecutionStatementAdapter() {
        if (executionStatementItemProvider == null) {
            executionStatementItemProvider = new ExecutionStatementItemProvider(this);
        }

        return executionStatementItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.InteractionOperand} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected InteractionOperandItemProvider interactionOperandItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.InteractionOperand}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createInteractionOperandAdapter() {
        if (interactionOperandItemProvider == null) {
            interactionOperandItemProvider = new InteractionOperandItemProvider(this);
        }

        return interactionOperandItemProvider;
    }

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.StructuralFeatureValue}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createStructuralFeatureValueAdapter() {
        return new StructuralFeatureValueItemProvider(this);
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.ParameterValueMapping} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ParameterValueMappingItemProvider parameterValueMappingItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.ParameterValueMapping}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createParameterValueMappingAdapter() {
        if (parameterValueMappingItemProvider == null) {
            parameterValueMappingItemProvider = new ParameterValueMappingItemProvider(this);
        }

        return parameterValueMappingItemProvider;
    }

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.ParameterValue}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createParameterValueAdapter() {
        return new ParameterValueItemProvider(this);
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.OpaqueExpression} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OpaqueExpressionItemProvider opaqueExpressionItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.OpaqueExpression}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOpaqueExpressionAdapter() {
        if (opaqueExpressionItemProvider == null) {
            opaqueExpressionItemProvider = new OpaqueExpressionItemProvider(this);
        }

        return opaqueExpressionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.LiteralString} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LiteralStringItemProvider literalStringItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.LiteralString}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLiteralStringAdapter() {
        if (literalStringItemProvider == null) {
            literalStringItemProvider = new LiteralStringItemProvider(this);
        }

        return literalStringItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.LiteralInteger} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LiteralIntegerItemProvider literalIntegerItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.LiteralInteger}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLiteralIntegerAdapter() {
        if (literalIntegerItemProvider == null) {
            literalIntegerItemProvider = new LiteralIntegerItemProvider(this);
        }

        return literalIntegerItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.RSet} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RSetItemProvider rSetItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.RSet}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRSetAdapter() {
        if (rSetItemProvider == null) {
            rSetItemProvider = new RSetItemProvider(this);
        }

        return rSetItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.RSequence} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RSequenceItemProvider rSequenceItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.RSequence}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRSequenceAdapter() {
        if (rSequenceItemProvider == null) {
            rSequenceItemProvider = new RSequenceItemProvider(this);
        }

        return rSequenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.Layout} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LayoutItemProvider layoutItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.Layout}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLayoutAdapter() {
        if (layoutItemProvider == null) {
            layoutItemProvider = new LayoutItemProvider(this);
        }

        return layoutItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link java.util.Map.Entry} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ContainerMapItemProvider containerMapItemProvider;

    /**
     * This creates an adapter for a {@link java.util.Map.Entry}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createContainerMapAdapter() {
        if (containerMapItemProvider == null) {
            containerMapItemProvider = new ContainerMapItemProvider(this);
        }

        return containerMapItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link java.util.Map.Entry} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ElementMapItemProvider elementMapItemProvider;

    /**
     * This creates an adapter for a {@link java.util.Map.Entry}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createElementMapAdapter() {
        if (elementMapItemProvider == null) {
            elementMapItemProvider = new ElementMapItemProvider(this);
        }

        return elementMapItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.LayoutElement} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LayoutElementItemProvider layoutElementItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.LayoutElement}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLayoutElementAdapter() {
        if (layoutElementItemProvider == null) {
            layoutElementItemProvider = new LayoutElementItemProvider(this);
        }

        return layoutElementItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.ImplementationClass} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ImplementationClassItemProvider implementationClassItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.ImplementationClass}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createImplementationClassAdapter() {
        if (implementationClassItemProvider == null) {
            implementationClassItemProvider = new ImplementationClassItemProvider(this);
        }

        return implementationClassItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.Reference} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ReferenceItemProvider referenceItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.Reference}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createReferenceAdapter() {
        if (referenceItemProvider == null) {
            referenceItemProvider = new ReferenceItemProvider(this);
        }

        return referenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.Gate} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected GateItemProvider gateItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.Gate}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createGateAdapter() {
        if (gateItemProvider == null) {
            gateItemProvider = new GateItemProvider(this);
        }

        return gateItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.LiteralBoolean} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LiteralBooleanItemProvider literalBooleanItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.LiteralBoolean}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLiteralBooleanAdapter() {
        if (literalBooleanItemProvider == null) {
            literalBooleanItemProvider = new LiteralBooleanItemProvider(this);
        }

        return literalBooleanItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.ClassifierMapping} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ClassifierMappingItemProvider classifierMappingItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.ClassifierMapping}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createClassifierMappingAdapter() {
        if (classifierMappingItemProvider == null) {
            classifierMappingItemProvider = new ClassifierMappingItemProvider(this);
        }

        return classifierMappingItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.AttributeMapping} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AttributeMappingItemProvider attributeMappingItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.AttributeMapping}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAttributeMappingAdapter() {
        if (attributeMappingItemProvider == null) {
            attributeMappingItemProvider = new AttributeMappingItemProvider(this);
        }

        return attributeMappingItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.OperationMapping} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OperationMappingItemProvider operationMappingItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.OperationMapping}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOperationMappingAdapter() {
        if (operationMappingItemProvider == null) {
            operationMappingItemProvider = new OperationMappingItemProvider(this);
        }

        return operationMappingItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.ParameterMapping} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ParameterMappingItemProvider parameterMappingItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.ParameterMapping}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createParameterMappingAdapter() {
        if (parameterMappingItemProvider == null) {
            parameterMappingItemProvider = new ParameterMappingItemProvider(this);
        }

        return parameterMappingItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.StateView} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected StateViewItemProvider stateViewItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.StateView}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createStateViewAdapter() {
        if (stateViewItemProvider == null) {
            stateViewItemProvider = new StateViewItemProvider(this);
        }

        return stateViewItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.StateMachine} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected StateMachineItemProvider stateMachineItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.StateMachine}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createStateMachineAdapter() {
        if (stateMachineItemProvider == null) {
            stateMachineItemProvider = new StateMachineItemProvider(this);
        }

        return stateMachineItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.Transition} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TransitionItemProvider transitionItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.Transition}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTransitionAdapter() {
        if (transitionItemProvider == null) {
            transitionItemProvider = new TransitionItemProvider(this);
        }

        return transitionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.State} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected StateItemProvider stateItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.State}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createStateAdapter() {
        if (stateItemProvider == null) {
            stateItemProvider = new StateItemProvider(this);
        }

        return stateItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.RDouble} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RDoubleItemProvider rDoubleItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.RDouble}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRDoubleAdapter() {
        if (rDoubleItemProvider == null) {
            rDoubleItemProvider = new RDoubleItemProvider(this);
        }

        return rDoubleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.RFloat} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RFloatItemProvider rFloatItemProvider;

    /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.RFloat}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRFloatAdapter() {
        if (rFloatItemProvider == null) {
            rFloatItemProvider = new RFloatItemProvider(this);
        }

        return rFloatItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.Constraint} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected ConstraintItemProvider constraintItemProvider;

				/**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.Constraint}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createConstraintAdapter() {
        if (constraintItemProvider == null) {
            constraintItemProvider = new ConstraintItemProvider(this);
        }

        return constraintItemProvider;
    }

				/**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.Substitution} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected SubstitutionItemProvider substitutionItemProvider;

				/**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.Substitution}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createSubstitutionAdapter() {
        if (substitutionItemProvider == null) {
            substitutionItemProvider = new SubstitutionItemProvider(this);
        }

        return substitutionItemProvider;
    }

				/**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.TransitionSubstitution} instances.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	protected TransitionSubstitutionItemProvider transitionSubstitutionItemProvider;

				/**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.TransitionSubstitution}.
     * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
     * @generated
     */
	@Override
	public Adapter createTransitionSubstitutionAdapter() {
        if (transitionSubstitutionItemProvider == null) {
            transitionSubstitutionItemProvider = new TransitionSubstitutionItemProvider(this);
        }

        return transitionSubstitutionItemProvider;
    }

				/**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.TypeParameter} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TypeParameterItemProvider typeParameterItemProvider;

                /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.TypeParameter}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTypeParameterAdapter() {
        if (typeParameterItemProvider == null) {
            typeParameterItemProvider = new TypeParameterItemProvider(this);
        }

        return typeParameterItemProvider;
    }

                /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.RLong} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RLongItemProvider rLongItemProvider;

                /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.RLong}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRLongAdapter() {
        if (rLongItemProvider == null) {
            rLongItemProvider = new RLongItemProvider(this);
        }

        return rLongItemProvider;
    }

                /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.RArray} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RArrayItemProvider rArrayItemProvider;

                /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.RArray}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRArrayAdapter() {
        if (rArrayItemProvider == null) {
            rArrayItemProvider = new RArrayItemProvider(this);
        }

        return rArrayItemProvider;
    }

                /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.WovenAspect} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected WovenAspectItemProvider wovenAspectItemProvider;

                /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.WovenAspect}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createWovenAspectAdapter() {
        if (wovenAspectItemProvider == null) {
            wovenAspectItemProvider = new WovenAspectItemProvider(this);
        }

        return wovenAspectItemProvider;
    }

                /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.LiteralNull} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LiteralNullItemProvider literalNullItemProvider;

                /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.LiteralNull}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLiteralNullAdapter() {
        if (literalNullItemProvider == null) {
            literalNullItemProvider = new LiteralNullItemProvider(this);
        }

        return literalNullItemProvider;
    }

                /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.EnumLiteralValue} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected EnumLiteralValueItemProvider enumLiteralValueItemProvider;

                /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.EnumLiteralValue}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createEnumLiteralValueAdapter() {
        if (enumLiteralValueItemProvider == null) {
            enumLiteralValueItemProvider = new EnumLiteralValueItemProvider(this);
        }

        return enumLiteralValueItemProvider;
    }

                /**
     * This keeps track of the one adapter used for all {@link ca.mcgill.sel.ram.AssignmentStatement} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AssignmentStatementItemProvider assignmentStatementItemProvider;

                /**
     * This creates an adapter for a {@link ca.mcgill.sel.ram.AssignmentStatement}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAssignmentStatementAdapter() {
        if (assignmentStatementItemProvider == null) {
            assignmentStatementItemProvider = new AssignmentStatementItemProvider(this);
        }

        return assignmentStatementItemProvider;
    }

                /**
     * This returns the root adapter factory that contains this factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public ComposeableAdapterFactory getRootAdapterFactory() {
        return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
    }

    /**
     * This sets the composed adapter factory that contains this factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
        this.parentAdapterFactory = parentAdapterFactory;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public boolean isFactoryForType(Object type) {
        return supportedTypes.contains(type) || super.isFactoryForType(type);
    }

    /**
     * This implementation substitutes the factory itself as the key for the adapter.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter adapt(Notifier notifier, Object type) {
        return super.adapt(notifier, this);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Object adapt(Object object, Object type) {
        if (isFactoryForType(type)) {
            Object adapter = super.adapt(object, type);
            if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
                return adapter;
            }
        }

        return null;
    }

    /**
     * Associates an adapter with a notifier via the base implementation, then records it to ensure it will be disposed.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    protected void associate(Adapter adapter, Notifier target) {
        super.associate(adapter, target);
        if (adapter != null) {
            disposable.add(adapter);
        }
    }

    /**
     * This adds a listener.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void addListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.addListener(notifyChangedListener);
    }

    /**
     * This removes a listener.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void removeListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.removeListener(notifyChangedListener);
    }

    /**
     * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void fireNotifyChanged(Notification notification) {
        changeNotifier.fireNotifyChanged(notification);

        if (parentAdapterFactory != null) {
            parentAdapterFactory.fireNotifyChanged(notification);
        }
    }

    /**
     * This disposes all of the item providers created by this factory. 
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void dispose() {
        disposable.dispose();
    }

}
